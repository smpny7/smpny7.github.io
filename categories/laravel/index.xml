<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Laravel on コアラボ (coalabo.)</title><link>https://coalabo.net/categories/laravel/</link><description>Recent content in Laravel on コアラボ (coalabo.)</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Tue, 07 Sep 2021 18:00:00 +0900</lastBuildDate><atom:link href="https://coalabo.net/categories/laravel/index.xml" rel="self" type="application/rss+xml"/><item><title>【岡山大学依頼】接触追跡アプリの制作</title><link>https://coalabo.net/p/cacao/</link><pubDate>Tue, 07 Sep 2021 18:00:00 +0900</pubDate><guid>https://coalabo.net/p/cacao/</guid><description>以前に制作したアプリ 過去に部活内で使用するために、以前 こんなアプリ（部室の在室状況・体調記録アプリ） を作りました。
電子計算機研究会で使用しているアプリ
これが岡大理事の耳に入ったらしく、コロナ対策のため、全学向けにアプリを作ることになりました!!
具体的には、部活棟を中心に各部屋に1台 Android 端末を設置し、そこに学生証をかざすことで入退室を管理します。 感染者が出た場合は、学務課がその学籍番号を入力することで、2週間以内に同じ部屋にいた人を割り出すことができます。
仕様決め このアプリの制作には、かなりの規模のサーバアクセスになりますし、扱うデータも膨大になるのでセキュリティの懸念もあります。そのため、岡山大学情報統括センターと相談を重ねながら仕様決めを行いました。
【機能】
各部屋にある端末で入室処理と退室処理を行える。 学務課からは、「各部屋に誰が何人いるか」「各部屋の密度」を一覧で見れるページ（Webサイト）を用意。指定日の各部屋の入退室状況を Excel でダウンロードすることも可能。 学務課の権限のアカウントのみ、発症者の学籍番号を入力すると、過去2週間以内に「その人が会った人一覧」と「会った部屋」を出力することができる。また、2次的に接触した疑いのある生徒も同様に出力できる。 【特徴】
セキュリティのため、全て学籍番号で管理する。氏名や所属部活等の情報は一切保管せず、全てランダムな識別子を用いて管理。 NFC対応端末を使用することで、学生証をスマホにかざし、入退室登録を行う。 APIにアクセスするための権限を2つ作成する。 各部屋用: この権限のない端末からの、データ送信は不可 学務課用: この権限はWebへのアクセスも可能、データ管理や追跡も行える。 また、このいずれかのID・パスワードが流出した場合でも、こちらで無効化することができ、再発行可能である。
【仕様】
A の部屋に行ったあと、A の部屋で退室せずに B の部屋の入室リクエストを行った場合は、A の部屋から退室しますというモーダルと共に、B の部屋へ入室を行う。 退室処理を忘れた場合は、22時に自動的に退室扱いとなる。 統括センターの認可が降りたのでアプリを作る！ 制作期間は約3週間、AppStore と GooglePlayStore での審査期間も考慮して、実質2週間程度。 フロント（アプリ）の開発に時間がかかりそうだと思ったので、FeliCa スキャンが実装できるか心配でしたが、iOS・Android のアプリをいっぺんに作成したかったため Flutter を採用することにしました。Flutter にも NFC を読み取るライブラリは幾つかあるようです。
バックエンドは、とりあえず今回は Web で見れる機能も必要だったので、Laravel を採用しました。アプリとの通信の認証は、Laravel Passport を使用しています。フロントでは Blade ではなく主に Vue.js を使用し、コンソール画面のリロードを少なくしました。</description></item><item><title>オンライン授業配信サービスの作成: 戸田塾オンライン</title><link>https://coalabo.net/p/toda-online/</link><pubDate>Tue, 07 Sep 2021 10:00:00 +0900</pubDate><guid>https://coalabo.net/p/toda-online/</guid><description>最近、EdTechって流行ってますよね 私が高校生の時は、映像授業というものを受けてる学生が多かったです。
映像授業は、塾の講義と比べて場所と時間が限定されませんし、何度でも授業を聞き直すことができるのでとても評判が良かったです。 ただ、あれってすごく高い ですよね。一番地元で有名だった映像授業は、4教科で年間100万円近くかかってたそうです。あれだけのシステムを作って、東京の本部で撮影しているため、コストが高いのですかね&amp;hellip;？
もちろんそんなシステムは、個人塾や地方の塾では到底構築できません。 しかし、あまり塾にお金を出せない学生でも、オンラインの恩恵を受けられる選択肢があってもいいと思います。
ということで、地方の塾ではありますが、数学・物理専門の戸田塾と映像授業が見られるサービスを開始しました。
戸田塾オンライン (toda-online.com)
作成したもの 収録した映像をログインユーザが見れるのは最低限として、付加価値としてさまざまな機能をつけたいと思います。
まずは、各講義映像に紐づいたオープンチャット欄をつけていきます。 これは、1つの講義動画に対して質問があった際に、受講生がその動画の横にあるチャット欄で質問をすることができます。また、このチャットは全員が見れるようにしてあり、先生以外にも回答することができたり、同じ質問を持つ受講生が回答を見て理解できるような仕様になっています。
コミュニティ機能（著作権上、動画は非表示にしています）
また、WiFiなどの通信環境がない生徒のことを考慮して、動画のファイルサイズを表記したり、1本の動画が何分で視聴できるかを表記しています。
動画一覧画面（著作権上、動画は非表示にしています）
また、1本の動画を5分以内にし、サクサク見れる、授業進度を感じられるようなサービスにしたいとのことだったので、各項目ごとの達成度をグラフィカルに分かるようなものにしました。
各章 を選択する画面 各節 を選択する画面
スピード重視 やはり、高校生（特に受験生）で映像授業を選択する学生は、勉強効率を重視していると思う( ？)ので、サービスも重くならないように気をつけました。
フレームワークは Laravel で作成していますが、通信などは axios 等で行い再読み込み時間等が最小限になるように工夫しました。
また、大抵の人は最初から順に講義動画を見ていくので、ホーム画面に「次に見る」動画をあらかじめ並べておくようにしました。最後に見た動画と、その前後1つずつの、計3つを表示させています。
そして、動画の内容は再々変わるものではないので、ポスターや動画の情報はキャッシュを表示させ、管理画面から一括でキャッシュを作成できるようにしています。
最後に とりあえず今は、対面での受講生から順に募集を開始し、運用しています。 このブログを見ている人に宣伝をしても、受講する人はいないと思うので、一応リンクだけ貼っておきます(笑)
興味のある方はぜひご連絡ください！ ( 公式サイト )
戸田塾オンライン　https://toda-online.com</description></item></channel></rss>