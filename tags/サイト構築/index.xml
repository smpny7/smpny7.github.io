<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>サイト構築 on コアラボ (coalabo.)</title><link>https://coalabo.net/tags/%E3%82%B5%E3%82%A4%E3%83%88%E6%A7%8B%E7%AF%89/</link><description>Recent content in サイト構築 on コアラボ (coalabo.)</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Wed, 08 Sep 2021 17:00:00 +0900</lastBuildDate><atom:link href="https://coalabo.net/tags/%E3%82%B5%E3%82%A4%E3%83%88%E6%A7%8B%E7%AF%89/index.xml" rel="self" type="application/rss+xml"/><item><title>Nuxt.js + microCMS（ヘッドレスCMS）で部の公式サイト制作</title><link>https://coalabo.net/p/oucrc/</link><pubDate>Wed, 08 Sep 2021 17:00:00 +0900</pubDate><guid>https://coalabo.net/p/oucrc/</guid><description>部員が記事を投稿できるようにしたい 現在コロナ禍真っ最中。 岡山大学 電子計算機研究会では、オンライン慣れ（？）してますので、Discord で普段と変わらず部会をしたりゲームしたりしてコミュニケーションを取れているわけですが、もちろん対面での学祭やコミケなどの、制作物をアウトプットする場はここ１年以上ないままです。
電子計算機研究会では、各々がいろんな活動をしています。例えば、プログラミングや電子工作、3Dプリンターや3Dモデルで遊んでいる人もいますし、DTM ガチ勢も多いです。 例年はコミケなどで、そういった活動を記事にして1冊の本として出すのですが、その場も失われているため、部長としてこりゃいかん（ ？）と感じ、ホームページ上で記事を公開できるように改築しようと思います！
電子計算機研究会（通称: 電算研）のロゴ、かっこいい
部で「Webリニューアルチーム」を立ち上げる ちょうど3月で、来月から新入生も来るということで、もっと部のことを知ってもらおうと思い、少し新歓向けにリニューアルすることにしました。
部員が記事を投稿できる機能 部員のプロフィールページ（SNS や GitHub へのリンク付き） 部室の紹介ページ 入部申し込みフォーム 部からのお知らせ ここら辺を実装していきたいと思います！
「Webリニューアルチーム」には、6,7名の部員が参加してくれました。 半分ずつに分かれ、フロント（Nuxt.js）班とバックエンド（microCMSのセットアップやデータ登録）班を作り、作業開始です！
最初は Nuxt.js + microCMS ではなく、実は WordPress で実装しようとしていました。 そんなに新しいものではありませんが、記事を投稿するなら WordPress という印象が強かったので選んだのですが、WordPress についての知識が無く、簡単なのだろうと下調べをしていなかったため、Git管理の仕方が難しくグダグダになってしまいました&amp;hellip;（部員の皆さんすいません&amp;hellip;）
結局初日は作業量0で終わってしまいました。
そんな中先輩にヘッドレスCMSでの構築を提案していただき、Nuxt.js をフロントに計画を練り直すことにしました。
デザイン作成 まずは、作業分担しながら進められるように、デザインを作っていきます！
リニューアルホームページのデザイン
恐るべき開発スピード フロント班は自分含め3人で全てのページの実装をしたのですが、開発開始から約3日でほぼ全てのページが完成しました&amp;hellip;！？ 春休みということもあり、常に誰かがプルリクエストを出している状態で、恐るべきスピード開発でした。
リニューアルされたOUCRCサイト
Nuxt.js 便利！！ Vue.js で開発をする場合、vuex や vue-router を入れる必要がありますが、その手間を省けるのが一番大きいかなと思います。また、記事が更新された時にビルドすれば大丈夫なので、静的サイトに設定してますが、かなり読み込みは早いと思います。
頑張った。
入部フォーム 今回、入部フォームどうしようかな（Google Form でも埋め込もうかな）と考えていたのですが、面白い記事を発見しました。
https://www.gorilla-web.net/2020new_google_form_custmize/
&amp;hellip;ん、天才じゃない ？？</description></item><item><title>Hugo + GitHub Pages + 独自ドメイン でサイトを構築する</title><link>https://coalabo.net/p/hugo/</link><pubDate>Wed, 28 Apr 2021 00:00:00 +0900</pubDate><guid>https://coalabo.net/p/hugo/</guid><description>ブログを始めてみたい！ ブログを始めたいと思ったきっかけは、自分が作ったサービスが終了してしまうことでした。
せっかく作ったものが消えて日の目を浴びなくなるのは勿体ないので、 ブログという形で供養してやります！
なんかかっこいい方法でホスティングしたい 第一として、運用費用があまりかからないようにする必要があります。 なので、Nuxt.js を使って静的サイトを書き出し、GitHub Pages にデプロイしようかと考えていました。
ただ、フロントエンドやデザインのお仕事が続いており、自分でフロントを作成するのもなんだかなぁという状態でした。
とその時、知り合いからHugoを布教されました。なんとHugoにはテンプレートがたくさんあるじゃないですか！
Hugoは触ったことがなかったので、勉強がてら（といっても使い方の知見を得るだけですが）これを使ってブログを作成することにしました。
書き出しめっちゃ速い！！ 記事を Markdown で書いていくのですが、保存するたびホットリロードでブラウザに反映してくれます。
その速度が明らかに速いのです！（私が React や Nuxt.js などに慣れているからかもしれませんが&amp;hellip;）
書き出し速度がやばい！
Terminal 上に表示されている再レンダリング時間は 9ms とでていますね。
もう、一目惚れしました。
GitHub Pages にデプロイしよう すいません、タイトル詐欺です。 デプロイする前に1つすることがありました。
今回 Hugo Theme Stackというテーマパックを編集して使ったのですが、 これを submodule 登録しておきます。
$ git submodule add https://github.com/CaiJimmy/hugo-theme-stack themes/hugo-theme-stack また、git から clone する時は、submodule も忘れず引っ張ってくるようにしましょう。
$ git clone --recurse-submodules --depth 1 git@github.com:smpny7/coalabo.git GitHub Actions で自動化しよう 今度こそ、GitHub Actions で GitHub Pages に自動デプロイするように設定していきます。
今回 GitHub Pages 用に、&amp;lt;GitHub ユーザー名&amp;gt;.</description></item></channel></rss>